let build_info () =
  let open Build_info.V1 in
  let open Statically_linked_library in
  Statically_linked_libraries.to_list ()
  |> List.sort (fun a b -> String.compare (name a) (name b))
  |> List.map
     @@ fun lib ->
     let name = lib |> name
     and ver = lib |> version |> Option.map Version.to_string in
     let s =
       match ver with None -> name | Some v -> String.concat "." [name; v]
     in
     "    " ^ s

let print_header () =
  (* Don't embed our own version number because that'd continously change,
     because generated.v is also committed into the source tree
  *)
  print_endline "/*" ;
  [ Printf.sprintf "Generated by %s. DO NOT EDIT." __FILE__
  ; "If you want to modify this file, modify the above generator, or the below \
     libraries instead"
  ; "SPDX-License-Identifier: Apache-2.0"
  ; ""
  ; "Libraries used:" ]
  @ build_info ()
  |> List.iter (Printf.printf " * %s\n") ;
  print_endline "*/"
